{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,oG,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCE5F,MAAMC,EAAeC,SAASC,cAAc,iBACtCC,EAAUF,SAASC,cAAc,UACjCE,EAAaH,SAASI,eAAe,gBACrCC,EAAWL,SAASC,cAAc,WAExCC,EAAQI,iBAAiB,SAgDzB,SAAiBC,GACf,MAAMC,OAAEA,GAAWD,EAKnB,GAHAE,QAAQC,IAAIH,EAAEI,eACdF,QAAQC,IAAIF,GAERA,EAAOI,YACT,OAGFJ,EAAOI,YAAcC,EACrB,MAAM5B,EAAK6B,OAAON,EAAOO,QAAQ9B,IAElB,MAAX4B,EACFG,EAASC,KAAKhC,GAEdiC,EAASD,KAAKhC,GAGhBwB,QAAQC,IAAIQ,GACZT,QAAQC,IAAIM,GAEZH,EAAoB,MAAXA,EAAiB,IAAM,IAE5BG,EAAShC,OAASkC,EAASlC,SAAW,IAY1CmC,IACAH,EAAW,GACXE,EAAW,GACXL,EAAS,KAXTV,EAAWiB,OAAOC,OAAMC,IACtBb,QAAQa,MAAM,8BAA+BA,EAAM,IAavD,WACE,GAAIN,EAAShC,OAASkC,EAASlC,QAAU,EAAG,CAC1C,MAAMuC,EAAYC,EAAKC,MAAKC,GAC1BA,EAAKC,OAAM1C,GAAM+B,EAASY,SAAS3C,OAG/B4C,EAAYL,EAAKC,MAAKC,GAC1BA,EAAKC,OAAM1C,GAAMiC,EAASU,SAAS3C,OAGrCwB,QAAQC,IAAIa,GACZd,QAAQC,IAAImB,GAERN,IAKFd,QAAQC,IAAIoB,QACZrB,QAAQC,IAAI,OACZL,EAASO,YAAc,S,EA9B3BmB,E,IA9EF,IAAIlB,EAAS,IACTG,EAAW,GACXE,EAAW,GAEf,MAAMM,EAAO,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAKT,SAASL,IACP,IAAIa,EAAS,GACTC,EAAY,GAEhB,IAAK,IAAIlD,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BiD,GAAU,8BAA8BjD,YAG1C,IAAK,IAAImD,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BF,GAAU,gCAAgCE,YAG5C,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BF,GAAa,wCAEDE,gBACLC,EAAA5C,gEAOTO,EAAasC,mBAAmB,cAAeJ,GAC/C/B,EAAQoC,UAAYN,C,CA3BtBvB,QAAQC,WAAWc,GACnBf,QAAQC,WAAWM,GA6BnBG","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-45d1f67723351969.js","node_modules/@parcel/runtime-js/lib/runtime-0d409ae844743570.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.670e8817.js\\\",\\\"6kiXf\\\":\\\"icon-pen.5df63fbf.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6kiXf\")).toString();","import penImage from './images/svg/cursor/icon-pen.svg';\n\nconst fieldThumbEl = document.querySelector('.field__thumb');\nconst fieldEl = document.querySelector('.field');\nconst clickSound = document.getElementById('click__sound');\nconst winnerEl = document.querySelector('.winner');\n\nfieldEl.addEventListener('click', onClick);\n\nlet player = 'X';\nlet historyx = [];\nlet history0 = [];\n\nconst wins = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [7, 4, 1],\n  [8, 5, 2],\n  [9, 6, 3],\n  [7, 5, 3],\n  [9, 5, 1],\n];\nconsole.log(typeof wins);\nconsole.log(typeof historyx);\n\nfunction createMarkup() {\n  let markup = '';\n  let penMarkup = '';\n\n  for (let i = 1; i < 10; i += 1) {\n    markup += `<div class=\"item\" data-id=\"${i}\"></div>`;\n  }\n\n  for (let i = 1; i < 9; i += 1) {\n    markup += `<div class=\"line\" data-line=\"${i}\"></div>`;\n  }\n\n  for (let i = 1; i < 9; i += 1) {\n    penMarkup += `<img\n    class=\"pen\"\n    data-pen=\"${i}\"\n    src=\"${penImage}\"\n    alt=\"pen\"\n    width=\"100\"\n    height=\"100\"\n    />`;\n  }\n\n  fieldThumbEl.insertAdjacentHTML('beforebegin', penMarkup);\n  fieldEl.innerHTML = markup;\n}\n\ncreateMarkup();\n\nfunction onClick(e) {\n  const { target } = e;\n\n  console.log(e.currentTarget);\n  console.log(target);\n\n  if (target.textContent) {\n    return;\n  }\n\n  target.textContent = player;\n  const id = Number(target.dataset.id);\n\n  if (player === 'X') {\n    historyx.push(id);\n  } else {\n    history0.push(id);\n  }\n\n  console.log(history0);\n  console.log(historyx);\n\n  player = player === 'X' ? '0' : 'X';\n\n  if (historyx.length + history0.length === 9) {\n    reset();\n  }\n\n  clickSound.play().catch(error => {\n    console.error('Не вдалося відтворити звук:', error);\n  });\n\n  checkWins();\n}\n\nfunction reset() {\n  createMarkup();\n  historyx = [];\n  history0 = [];\n  player = 'X';\n}\n\nfunction checkWins() {\n  if (historyx.length + history0.length >= 5) {\n    const isWinnerX = wins.some(item =>\n      item.every(id => historyx.includes(id))\n    );\n\n    const isWinner0 = wins.some(item =>\n      item.every(id => history0.includes(id))\n    );\n\n    console.log(isWinnerX);\n    console.log(isWinner0);\n\n    if (isWinnerX) {\n      // const result = wins.find(item => {\n      //   item.every(id => historyx.includes(id));\n      //   return item.length;\n      // });\n      console.log(result);\n      console.log('win');\n      winnerEl.textContent = 'Winner';\n    }\n  }\n}\n\n// function victory() {}\n\n// function draw() {}\n\n// function loss() {}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$db766b1b9e3cd3a1$exports","URL","resolve","import","meta","url","toString","$1f0dc3b9307be026$var$fieldThumbEl","document","querySelector","$1f0dc3b9307be026$var$fieldEl","$1f0dc3b9307be026$var$clickSound","getElementById","$1f0dc3b9307be026$var$winnerEl","addEventListener","e","target","console","log","currentTarget","textContent","$1f0dc3b9307be026$var$player","Number","dataset","$1f0dc3b9307be026$var$historyx","push","$1f0dc3b9307be026$var$history0","$1f0dc3b9307be026$var$createMarkup","play","catch","error","isWinnerX","$1f0dc3b9307be026$var$wins","some","item","every","includes","isWinner0","result","$1f0dc3b9307be026$var$checkWins","markup","penMarkup","i1","i2","$parcel$interopDefault","insertAdjacentHTML","innerHTML"],"version":3,"file":"index.670e8817.js.map"}